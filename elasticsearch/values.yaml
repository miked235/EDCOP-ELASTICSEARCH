# EDCOP Elasticsearch Chart values
namespace: default
images:
  # Base image (es): docker.elastic.co/elasticsearch/elasticsearch:6.3.0
  elasticsearch: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
  curator: bobrik/curator
networks:
  # Overlay is the name of the default cni network
  overlay: calico
volumes:
  # Persistent data location on the host to store Elasticsearch's data
  data: /EDCOP/bulk/esdata
nodeSelector:
  client: data
  master: infrastructure
elasticsearchConfig:
  # runAsUser refers to the UID of the user who owns the persistent data location specified above
  # fsGroup refers to the group ID the container should run as 
  runAsUser: 2000
  fsGroup: 2001
  # Nodes refers to the number of worker nodes you have
  # NOTE: If you have a one-node cluster, set workerNodes to '0' and master.data to 'true'
  workerNodes: 0
  master:
    # Nodes refers to the number of master nodes you have
    nodes: 1
    # Set to 'true' to enable data to be stored on master node
    data: true
  index:
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html
    number_of_shards: 5
    auto_expand_replicas: 0-2
  env:
    clustername: edcop
    javaopts: -Xms2g -Xmx2g
  jvm:
    # Xms represents the initial size of total heap space
    # Xmx represents the maximum size of total heap space
    xmx: 2g
    xms: 2g
  # Requests are set to accommodate limited resource VMs
  requests:
    cpu: 100m
    memory: 64Mi
  limits:
    cpu: 2 
    memory: 4Gi
snapshotConfig:
  # Set to 'true' to enable it, false to disable. 
  enabled: false
  # Input how often snapshots should be taken in cronjob format
  cronjob_schedule: "1 0 * * *"
  # Input how many failed/successful pods should be kept after completion (0 for none)
  failedPodsLimit: 1
  successfulJobsLimit: 1
  # Amount of NFS storage to give to snapshots of elasticsearch
  pvc:
    storage: 10Gi
curatorConfig:
  # Set to 'true' to enable it, false to disable. 
  enabled: false
  # Input how often the curator should run in cronjob format
  cronjob_schedule: "1 0 * * *"
  # Input how many failed/successful pods should be kept after completion (0 for none)
  failedPodsLimit: 1
  successfulJobsLimit: 1     
  actions:
    close:
      # (True or False) Set to False to enable this feature.
      disable_action: False
      # Closes indices older than the specified units
      unit: days
      unit_count: 7
    delete_indices:
      # (True or False) Set to False to enable this feature.
      disable_action: False
      # Deletes indices older than the specified units
      unit: days
      unit_count: 14 
    
